{"version":3,"file":"demo.apex-heatmap-bcde8715.js","sources":["../../../resources/js/pages/demo.apex-heatmap.js"],"sourcesContent":["/**\n * Theme: KZS - Admin Panel\n * Author: Coderthemes\n * Module/App: Apex Area Charts\n */\n\nimport ApexCharts from 'apexcharts/dist/apexcharts.min.js';\n\n//\n// BASIC HEATMAP - SINGLE SERIES\n//\n\n/*\n// this function will generate output in this format\n// data = [\n    [timestamp, 23],\n    [timestamp, 33],\n    [timestamp, 12]\n    ...\n]\n*/\n\nconst singleSeries = () => {\n  function generateData(count, yrange) {\n    var i = 0;\n    var series = [];\n    while (i < count) {\n      var x = (i + 1).toString();\n      var y = Math.floor(Math.random() * (yrange.max - yrange.min + 1)) + yrange.min;\n\n      series.push({\n        x: x,\n        y: y\n      });\n      i++;\n    }\n    return series;\n  }\n\n  var colors = [\"#3e60d5\"];\n  var dataColors = $(\"#basic-heatmap\").data('colors');\n  if (dataColors) {\n    colors = dataColors.split(\",\");\n  }\n  var options = {\n    chart: {\n      height: 380,\n      type: 'heatmap',\n    },\n    dataLabels: {\n      enabled: false\n    },\n    colors: colors,\n    series: [{\n      name: 'Metric 1',\n      data: generateData(20, {\n        min: 0,\n        max: 90\n      })\n    },\n    {\n      name: 'Metric 2',\n      data: generateData(20, {\n        min: 0,\n        max: 90\n      })\n    },\n    {\n      name: 'Metric 3',\n      data: generateData(20, {\n        min: 0,\n        max: 90\n      })\n    },\n    {\n      name: 'Metric 4',\n      data: generateData(20, {\n        min: 0,\n        max: 90\n      })\n    },\n    {\n      name: 'Metric 5',\n      data: generateData(20, {\n        min: 0,\n        max: 90\n      })\n    },\n    {\n      name: 'Metric  6',\n      data: generateData(20, {\n        min: 0,\n        max: 90\n      })\n    },\n    {\n      name: 'Metric 7',\n      data: generateData(20, {\n        min: 0,\n        max: 90\n      })\n    },\n    {\n      name: 'Metric 8',\n      data: generateData(20, {\n        min: 0,\n        max: 90\n      })\n    },\n    {\n      name: 'Metric 9',\n      data: generateData(20, {\n        min: 0,\n        max: 90\n      })\n    }\n    ],\n    xaxis: {\n      type: 'category',\n    },\n\n  }\n\n  var chart = new ApexCharts(\n    document.querySelector(\"#basic-heatmap\"),\n    options\n  );\n\n  chart.render();\n}\n\n\n//\n// HEATMAP - MULTIPLE SERIES\n//\n\n/*\n// this function will generate output in this format\n// data = [\n    [timestamp, 23],\n    [timestamp, 33],\n    [timestamp, 12]\n    ...\n]\n*/\n\nconst multipleSeries = () => {\n  function generateData(count, yrange) {\n    var i = 0;\n    var series = [];\n    while (i < count) {\n      var x = (i + 1).toString();\n      var y = Math.floor(Math.random() * (yrange.max - yrange.min + 1)) + yrange.min;\n\n      series.push({\n        x: x,\n        y: y\n      });\n      i++;\n    }\n    return series;\n  }\n\n  var colors = [\"#F3B415\", \"#F27036\", \"#663F59\", \"#6A6E94\", \"#4E88B4\", \"#00A7C6\", \"#18D8D8\", '#A9D794', '#46AF78'];\n  var dataColors = $(\"#multiple-series-heatmap\").data('colors');\n  if (dataColors) {\n    colors = dataColors.split(\",\");\n  }\n  var options = {\n    chart: {\n      height: 380,\n      type: 'heatmap',\n    },\n    dataLabels: {\n      enabled: false\n    },\n    colors: colors,\n    series: [{\n      name: 'Metric 1',\n      data: generateData(20, {\n        min: 0,\n        max: 90\n      })\n    },\n    {\n      name: 'Metric 2',\n      data: generateData(20, {\n        min: 0,\n        max: 90\n      })\n    },\n    {\n      name: 'Metric 3',\n      data: generateData(20, {\n        min: 0,\n        max: 90\n      })\n    },\n    {\n      name: 'Metric 4',\n      data: generateData(20, {\n        min: 0,\n        max: 90\n      })\n    },\n    {\n      name: 'Metric 5',\n      data: generateData(20, {\n        min: 0,\n        max: 90\n      })\n    },\n    {\n      name: 'Metric 6',\n      data: generateData(20, {\n        min: 0,\n        max: 90\n      })\n    },\n    {\n      name: 'Metric 7',\n      data: generateData(20, {\n        min: 0,\n        max: 90\n      })\n    },\n    {\n      name: 'Metric 8',\n      data: generateData(20, {\n        min: 0,\n        max: 90\n      })\n    },\n    {\n      name: 'Metric 9',\n      data: generateData(20, {\n        min: 0,\n        max: 90\n      })\n    }\n    ],\n    xaxis: {\n      type: 'category',\n    },\n  }\n\n  var chart = new ApexCharts(\n    document.querySelector(\"#multiple-series-heatmap\"),\n    options\n  );\n\n  chart.render();\n}\n\n\n//\n// HEATMAP - COLOR RANGE\n//\n\n/*\n// this function will generate output in this format\n// data = [\n    [timestamp, 23],\n    [timestamp, 33],\n    [timestamp, 12]\n    ...\n]\n*/\nconst colorRange = () => {\n  function generateData(count, yrange) {\n    var i = 0;\n    var series = [];\n    while (i < count) {\n      var x = (i + 1).toString();\n      var y = Math.floor(Math.random() * (yrange.max - yrange.min + 1)) + yrange.min;\n\n      series.push({\n        x: x,\n        y: y\n      });\n      i++;\n    }\n    return series;\n  }\n  var colors = [\"#fa6767\", \"#f9bc0d\", \"#44badc\", \"#42d29d\"];\n  var dataColors = $(\"#color-range-heatmap\").data('colors');\n  if (dataColors) {\n    colors = dataColors.split(\",\");\n  }\n  var options = {\n    chart: {\n      height: 380,\n      type: 'heatmap',\n    },\n    plotOptions: {\n      heatmap: {\n        shadeIntensity: 0.5,\n\n        colorScale: {\n          ranges: [{\n            from: -30,\n            to: 5,\n            name: 'Low',\n            color: colors[0]\n          },\n          {\n            from: 6,\n            to: 20,\n            name: 'Medium',\n            color: colors[1]\n          },\n          {\n            from: 21,\n            to: 45,\n            name: 'High',\n            color: colors[2]\n          },\n          {\n            from: 46,\n            to: 55,\n            name: 'Extreme',\n            color: colors[3]\n          }\n          ]\n        }\n      }\n    },\n    dataLabels: {\n      enabled: false\n    },\n    series: [{\n      name: 'Jan',\n      data: generateData(20, {\n        min: -30,\n        max: 55\n      })\n    },\n    {\n      name: 'Feb',\n      data: generateData(20, {\n        min: -30,\n        max: 55\n      })\n    },\n    {\n      name: 'Mar',\n      data: generateData(20, {\n        min: -30,\n        max: 55\n      })\n    },\n    {\n      name: 'Apr',\n      data: generateData(20, {\n        min: -30,\n        max: 55\n      })\n    },\n    {\n      name: 'May',\n      data: generateData(20, {\n        min: -30,\n        max: 55\n      })\n    },\n    {\n      name: 'Jun',\n      data: generateData(20, {\n        min: -30,\n        max: 55\n      })\n    },\n    {\n      name: 'Jul',\n      data: generateData(20, {\n        min: -30,\n        max: 55\n      })\n    },\n    {\n      name: 'Aug',\n      data: generateData(20, {\n        min: -30,\n        max: 55\n      })\n    },\n    {\n      name: 'Sep',\n      data: generateData(20, {\n        min: -30,\n        max: 55\n      })\n    }\n    ],\n\n  }\n\n  var chart = new ApexCharts(\n    document.querySelector(\"#color-range-heatmap\"),\n    options\n  );\n\n  chart.render();\n}\n\n\n\n//\n// HEATMAP - RANGE WITHOUT SHADES\n//\n\n/*\n// this function will generate output in this format\n// data = [\n    [timestamp, 23],\n    [timestamp, 33],\n    [timestamp, 12]\n    ...\n]\n*/\n\nconst rangeWithoutShades = () => {\n  function generateData(count, yrange) {\n    var i = 0;\n    var series = [];\n    while (i < count) {\n      var x = (i + 1).toString();\n      var y = Math.floor(Math.random() * (yrange.max - yrange.min + 1)) + yrange.min;\n\n      series.push({\n        x: x,\n        y: y\n      });\n      i++;\n    }\n    return series;\n  }\n\n  var colors = [\"#39afd1\", \"#47ad77\"];\n  var dataColors = $(\"#rounded-heatmap\").data('colors');\n  if (dataColors) {\n    colors = dataColors.split(\",\");\n  }\n  var options = {\n    chart: {\n      height: 380,\n      type: 'heatmap',\n    },\n    stroke: {\n      width: 0\n    },\n    plotOptions: {\n      heatmap: {\n        radius: 30,\n        enableShades: false,\n        colorScale: {\n          ranges: [{\n            from: 0,\n            to: 50,\n            color: colors[0]\n          },\n          {\n            from: 51,\n            to: 100,\n            color: colors[1]\n          },\n          ],\n        },\n\n      }\n    },\n    colors: colors,\n    dataLabels: {\n      enabled: true,\n      style: {\n        colors: ['#fff']\n      }\n    },\n    series: [{\n      name: 'Metric1',\n      data: generateData(20, {\n        min: 0,\n        max: 90\n      })\n    },\n    {\n      name: 'Metric2',\n      data: generateData(20, {\n        min: 0,\n        max: 90\n      })\n    },\n    {\n      name: 'Metric3',\n      data: generateData(20, {\n        min: 0,\n        max: 90\n      })\n    },\n    {\n      name: 'Metric4',\n      data: generateData(20, {\n        min: 0,\n        max: 90\n      })\n    },\n    {\n      name: 'Metric5',\n      data: generateData(20, {\n        min: 0,\n        max: 90\n      })\n    },\n    {\n      name: 'Metric6',\n      data: generateData(20, {\n        min: 0,\n        max: 90\n      })\n    },\n    {\n      name: 'Metric7',\n      data: generateData(20, {\n        min: 0,\n        max: 90\n      })\n    },\n    {\n      name: 'Metric8',\n      data: generateData(20, {\n        min: 0,\n        max: 90\n      })\n    },\n    {\n      name: 'Metric8',\n      data: generateData(20, {\n        min: 0,\n        max: 90\n      })\n    }\n    ],\n\n    xaxis: {\n      type: 'category',\n    },\n    grid: {\n      borderColor: '#f1f3fa'\n    }\n  }\n\n  var chart = new ApexCharts(\n    document.querySelector(\"#rounded-heatmap\"),\n    options\n  );\n\n  chart.render();\n}\n\nsingleSeries()\nmultipleSeries()\ncolorRange()\nrangeWithoutShades()\n"],"names":["singleSeries","generateData","count","yrange","i","series","x","y","colors","dataColors","options","chart","ApexCharts","multipleSeries","colorRange","rangeWithoutShades"],"mappings":"wFAsBA,MAAMA,EAAe,IAAM,CACzB,SAASC,EAAaC,EAAOC,EAAQ,CAGnC,QAFIC,EAAI,EACJC,EAAS,CAAA,EACND,EAAIF,GAAO,CAChB,IAAII,GAAKF,EAAI,GAAG,SAAQ,EACpBG,EAAI,KAAK,MAAM,KAAK,OAAM,GAAMJ,EAAO,IAAMA,EAAO,IAAM,EAAE,EAAIA,EAAO,IAE3EE,EAAO,KAAK,CACV,EAAGC,EACH,EAAGC,CACX,CAAO,EACDH,IAEF,OAAOC,CACR,CAED,IAAIG,EAAS,CAAC,SAAS,EACnBC,EAAa,EAAE,gBAAgB,EAAE,KAAK,QAAQ,EAC9CA,IACFD,EAASC,EAAW,MAAM,GAAG,GAE/B,IAAIC,EAAU,CACZ,MAAO,CACL,OAAQ,IACR,KAAM,SACP,EACD,WAAY,CACV,QAAS,EACV,EACD,OAAQF,EACR,OAAQ,CAAC,CACP,KAAM,WACN,KAAMP,EAAa,GAAI,CACrB,IAAK,EACL,IAAK,EACb,CAAO,CACF,EACD,CACE,KAAM,WACN,KAAMA,EAAa,GAAI,CACrB,IAAK,EACL,IAAK,EACb,CAAO,CACF,EACD,CACE,KAAM,WACN,KAAMA,EAAa,GAAI,CACrB,IAAK,EACL,IAAK,EACb,CAAO,CACF,EACD,CACE,KAAM,WACN,KAAMA,EAAa,GAAI,CACrB,IAAK,EACL,IAAK,EACb,CAAO,CACF,EACD,CACE,KAAM,WACN,KAAMA,EAAa,GAAI,CACrB,IAAK,EACL,IAAK,EACb,CAAO,CACF,EACD,CACE,KAAM,YACN,KAAMA,EAAa,GAAI,CACrB,IAAK,EACL,IAAK,EACb,CAAO,CACF,EACD,CACE,KAAM,WACN,KAAMA,EAAa,GAAI,CACrB,IAAK,EACL,IAAK,EACb,CAAO,CACF,EACD,CACE,KAAM,WACN,KAAMA,EAAa,GAAI,CACrB,IAAK,EACL,IAAK,EACb,CAAO,CACF,EACD,CACE,KAAM,WACN,KAAMA,EAAa,GAAI,CACrB,IAAK,EACL,IAAK,EACb,CAAO,CACF,CACA,EACD,MAAO,CACL,KAAM,UACP,CAEF,EAEGU,EAAQ,IAAIC,EACd,SAAS,cAAc,gBAAgB,EACvCF,CACJ,EAEEC,EAAM,OAAM,CACd,EAiBME,EAAiB,IAAM,CAC3B,SAASZ,EAAaC,EAAOC,EAAQ,CAGnC,QAFIC,EAAI,EACJC,EAAS,CAAA,EACND,EAAIF,GAAO,CAChB,IAAII,GAAKF,EAAI,GAAG,SAAQ,EACpBG,EAAI,KAAK,MAAM,KAAK,OAAM,GAAMJ,EAAO,IAAMA,EAAO,IAAM,EAAE,EAAIA,EAAO,IAE3EE,EAAO,KAAK,CACV,EAAGC,EACH,EAAGC,CACX,CAAO,EACDH,IAEF,OAAOC,CACR,CAED,IAAIG,EAAS,CAAC,UAAW,UAAW,UAAW,UAAW,UAAW,UAAW,UAAW,UAAW,SAAS,EAC3GC,EAAa,EAAE,0BAA0B,EAAE,KAAK,QAAQ,EACxDA,IACFD,EAASC,EAAW,MAAM,GAAG,GAE/B,IAAIC,EAAU,CACZ,MAAO,CACL,OAAQ,IACR,KAAM,SACP,EACD,WAAY,CACV,QAAS,EACV,EACD,OAAQF,EACR,OAAQ,CAAC,CACP,KAAM,WACN,KAAMP,EAAa,GAAI,CACrB,IAAK,EACL,IAAK,EACb,CAAO,CACF,EACD,CACE,KAAM,WACN,KAAMA,EAAa,GAAI,CACrB,IAAK,EACL,IAAK,EACb,CAAO,CACF,EACD,CACE,KAAM,WACN,KAAMA,EAAa,GAAI,CACrB,IAAK,EACL,IAAK,EACb,CAAO,CACF,EACD,CACE,KAAM,WACN,KAAMA,EAAa,GAAI,CACrB,IAAK,EACL,IAAK,EACb,CAAO,CACF,EACD,CACE,KAAM,WACN,KAAMA,EAAa,GAAI,CACrB,IAAK,EACL,IAAK,EACb,CAAO,CACF,EACD,CACE,KAAM,WACN,KAAMA,EAAa,GAAI,CACrB,IAAK,EACL,IAAK,EACb,CAAO,CACF,EACD,CACE,KAAM,WACN,KAAMA,EAAa,GAAI,CACrB,IAAK,EACL,IAAK,EACb,CAAO,CACF,EACD,CACE,KAAM,WACN,KAAMA,EAAa,GAAI,CACrB,IAAK,EACL,IAAK,EACb,CAAO,CACF,EACD,CACE,KAAM,WACN,KAAMA,EAAa,GAAI,CACrB,IAAK,EACL,IAAK,EACb,CAAO,CACF,CACA,EACD,MAAO,CACL,KAAM,UACP,CACF,EAEGU,EAAQ,IAAIC,EACd,SAAS,cAAc,0BAA0B,EACjDF,CACJ,EAEEC,EAAM,OAAM,CACd,EAgBMG,EAAa,IAAM,CACvB,SAASb,EAAaC,EAAOC,EAAQ,CAGnC,QAFIC,EAAI,EACJC,EAAS,CAAA,EACND,EAAIF,GAAO,CAChB,IAAII,GAAKF,EAAI,GAAG,SAAQ,EACpBG,EAAI,KAAK,MAAM,KAAK,OAAM,GAAMJ,EAAO,IAAMA,EAAO,IAAM,EAAE,EAAIA,EAAO,IAE3EE,EAAO,KAAK,CACV,EAAGC,EACH,EAAGC,CACX,CAAO,EACDH,IAEF,OAAOC,CACR,CACD,IAAIG,EAAS,CAAC,UAAW,UAAW,UAAW,SAAS,EACpDC,EAAa,EAAE,sBAAsB,EAAE,KAAK,QAAQ,EACpDA,IACFD,EAASC,EAAW,MAAM,GAAG,GAE/B,IAAIC,EAAU,CACZ,MAAO,CACL,OAAQ,IACR,KAAM,SACP,EACD,YAAa,CACX,QAAS,CACP,eAAgB,GAEhB,WAAY,CACV,OAAQ,CAAC,CACP,KAAM,IACN,GAAI,EACJ,KAAM,MACN,MAAOF,EAAO,CAAC,CAChB,EACD,CACE,KAAM,EACN,GAAI,GACJ,KAAM,SACN,MAAOA,EAAO,CAAC,CAChB,EACD,CACE,KAAM,GACN,GAAI,GACJ,KAAM,OACN,MAAOA,EAAO,CAAC,CAChB,EACD,CACE,KAAM,GACN,GAAI,GACJ,KAAM,UACN,MAAOA,EAAO,CAAC,CAChB,CACA,CACF,CACF,CACF,EACD,WAAY,CACV,QAAS,EACV,EACD,OAAQ,CAAC,CACP,KAAM,MACN,KAAMP,EAAa,GAAI,CACrB,IAAK,IACL,IAAK,EACb,CAAO,CACF,EACD,CACE,KAAM,MACN,KAAMA,EAAa,GAAI,CACrB,IAAK,IACL,IAAK,EACb,CAAO,CACF,EACD,CACE,KAAM,MACN,KAAMA,EAAa,GAAI,CACrB,IAAK,IACL,IAAK,EACb,CAAO,CACF,EACD,CACE,KAAM,MACN,KAAMA,EAAa,GAAI,CACrB,IAAK,IACL,IAAK,EACb,CAAO,CACF,EACD,CACE,KAAM,MACN,KAAMA,EAAa,GAAI,CACrB,IAAK,IACL,IAAK,EACb,CAAO,CACF,EACD,CACE,KAAM,MACN,KAAMA,EAAa,GAAI,CACrB,IAAK,IACL,IAAK,EACb,CAAO,CACF,EACD,CACE,KAAM,MACN,KAAMA,EAAa,GAAI,CACrB,IAAK,IACL,IAAK,EACb,CAAO,CACF,EACD,CACE,KAAM,MACN,KAAMA,EAAa,GAAI,CACrB,IAAK,IACL,IAAK,EACb,CAAO,CACF,EACD,CACE,KAAM,MACN,KAAMA,EAAa,GAAI,CACrB,IAAK,IACL,IAAK,EACb,CAAO,CACF,CACA,CAEF,EAEGU,EAAQ,IAAIC,EACd,SAAS,cAAc,sBAAsB,EAC7CF,CACJ,EAEEC,EAAM,OAAM,CACd,EAkBMI,EAAqB,IAAM,CAC/B,SAASd,EAAaC,EAAOC,EAAQ,CAGnC,QAFIC,EAAI,EACJC,EAAS,CAAA,EACND,EAAIF,GAAO,CAChB,IAAII,GAAKF,EAAI,GAAG,SAAQ,EACpBG,EAAI,KAAK,MAAM,KAAK,OAAM,GAAMJ,EAAO,IAAMA,EAAO,IAAM,EAAE,EAAIA,EAAO,IAE3EE,EAAO,KAAK,CACV,EAAGC,EACH,EAAGC,CACX,CAAO,EACDH,IAEF,OAAOC,CACR,CAED,IAAIG,EAAS,CAAC,UAAW,SAAS,EAC9BC,EAAa,EAAE,kBAAkB,EAAE,KAAK,QAAQ,EAChDA,IACFD,EAASC,EAAW,MAAM,GAAG,GAE/B,IAAIC,EAAU,CACZ,MAAO,CACL,OAAQ,IACR,KAAM,SACP,EACD,OAAQ,CACN,MAAO,CACR,EACD,YAAa,CACX,QAAS,CACP,OAAQ,GACR,aAAc,GACd,WAAY,CACV,OAAQ,CAAC,CACP,KAAM,EACN,GAAI,GACJ,MAAOF,EAAO,CAAC,CAChB,EACD,CACE,KAAM,GACN,GAAI,IACJ,MAAOA,EAAO,CAAC,CAChB,CACA,CACF,CAEF,CACF,EACD,OAAQA,EACR,WAAY,CACV,QAAS,GACT,MAAO,CACL,OAAQ,CAAC,MAAM,CAChB,CACF,EACD,OAAQ,CAAC,CACP,KAAM,UACN,KAAMP,EAAa,GAAI,CACrB,IAAK,EACL,IAAK,EACb,CAAO,CACF,EACD,CACE,KAAM,UACN,KAAMA,EAAa,GAAI,CACrB,IAAK,EACL,IAAK,EACb,CAAO,CACF,EACD,CACE,KAAM,UACN,KAAMA,EAAa,GAAI,CACrB,IAAK,EACL,IAAK,EACb,CAAO,CACF,EACD,CACE,KAAM,UACN,KAAMA,EAAa,GAAI,CACrB,IAAK,EACL,IAAK,EACb,CAAO,CACF,EACD,CACE,KAAM,UACN,KAAMA,EAAa,GAAI,CACrB,IAAK,EACL,IAAK,EACb,CAAO,CACF,EACD,CACE,KAAM,UACN,KAAMA,EAAa,GAAI,CACrB,IAAK,EACL,IAAK,EACb,CAAO,CACF,EACD,CACE,KAAM,UACN,KAAMA,EAAa,GAAI,CACrB,IAAK,EACL,IAAK,EACb,CAAO,CACF,EACD,CACE,KAAM,UACN,KAAMA,EAAa,GAAI,CACrB,IAAK,EACL,IAAK,EACb,CAAO,CACF,EACD,CACE,KAAM,UACN,KAAMA,EAAa,GAAI,CACrB,IAAK,EACL,IAAK,EACb,CAAO,CACF,CACA,EAED,MAAO,CACL,KAAM,UACP,EACD,KAAM,CACJ,YAAa,SACd,CACF,EAEGU,EAAQ,IAAIC,EACd,SAAS,cAAc,kBAAkB,EACzCF,CACJ,EAEEC,EAAM,OAAM,CACd,EAEAX,EAAc,EACda,EAAgB,EAChBC,EAAY,EACZC,EAAkB"}